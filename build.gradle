plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'project'
version = 'v1'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()

    // 포트원(구 아임포트)은 maven 기반으로 의존성을 추가한다. (여기에 jitpack.io를 추가하면 gradle에서도 iamport라이브러리를 추가할 수 있다.)
    maven { url 'https://jitpack.io' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    // JWT
    implementation 'io.jsonwebtoken:jjwt:0.9.1'     // 자바 JWT 라이브러리
    implementation 'javax.xml.bind:jaxb-api:2.3.1'  // XML 문서와 Java 객체 간 매핑 자동화

    // Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Redisson
    implementation 'org.redisson:redisson-spring-boot-starter:3.28.0'

    // Selenium
    implementation 'org.jsoup:jsoup:1.15.3'
    implementation group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '4.28.0'

    // S3 (Spring Cloud AWS)
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // QueryDSL
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    // PortOne
    implementation 'com.github.iamport:iamport-rest-client-java:0.2.21'

    // 낙관적 락
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework:spring-aspects' // AspectJ 지원 및 고급 AOP 기능 제공

    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

    // MongoDB
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // Kafka
    implementation 'org.springframework.kafka:spring-kafka'

    // 모니터링
    implementation 'io.micrometer:micrometer-registry-prometheus'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
}

tasks.named('test') {
    useJUnitPlatform()
}
